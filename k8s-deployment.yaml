apiVersion: v1
kind: Service
metadata:
  name: nodejs-application-service
spec:
  selector:
    app: nodejs-application
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 3000
  type: LoadBalancer
  externalIPs:
  - 192.168.1.101

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    service: postgres
spec:
  selector:
    service: postgres
  type: NodePort
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-application
spec:
  selector:
    matchLabels:
      app: nodejs-application
  replicas: 5
  template:
    metadata:
      labels:
        app: nodejs-application
    spec:
      containers:
      - name: nodejs-application
        image: nodejs-application
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "postgres"
        - name: POSTGRES_DB
          value: "database"
        - name: POSTGRES_HOST
          value: "postgres"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    name: database
spec:
  replicas: 1
  selector:
    matchLabels:
      service: postgres
  template:
    metadata:
      labels:
        service: postgres
    spec:
      containers:
      - name: postgres
        image: postgres
        env:
        - name: POSTGRES_PASSWORD
          value: "postgres"
        - name: POSTGRES_DB
          value: "database" 
      restartPolicy: Always
